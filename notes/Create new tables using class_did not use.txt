# Working!
# See https://leportella.com/english/2019/01/10/sqlalchemy-basics-tutorial.html#creating-tables



# from sqlalchemy.orm import sessionmaker

# Session = sessionmaker(bind=engine)
# session = Session()

# from sqlalchemy.ext.declarative import declarative_base

# Base = declarative_base()




class User(Base):
    __tablename__ = new_table_name

    pk_index = Column(Integer, primary_key = True)
    data_type = Column(Integer)
    top_depth = Column(Float)
    base_depth = Column(Float)
    top_boundary = Column(SmallInteger)
    base_boundary = Column(SmallInteger)
    symbol_id = Column(Integer)
    legend = Column(NVARCHAR)
    interpreter = Column(NVARCHAR(6))
    created = Column(Float)
    modified = Column(Float)
    obsno = Column(Integer)
    mindepth = Column(Float)
    maxdepth = Column(Float)
    remark = Column(NVARCHAR(80))
    geofeature = Column(NVARCHAR(40))
    dipangle = Column(Float)
    dipazimuth = Column(Float)
    age = Column(Float)
    owconf = Column(NVARCHAR(2))
    owqual = Column(NVARCHAR(4))
    owkind = Column(NVARCHAR(42))
    owbaseconf = Column(NVARCHAR(2))
    owbasequal = Column(NVARCHAR(4))
    owbasekind = Column(NVARCHAR(42))
    top_age = Column(Float)
    base_age = Column(Float)
    f_interpid = Column(Integer)
    creator = Column(NVARCHAR(64))
    modifier = Column(NVARCHAR(64))
    abr = Column(NVARCHAR(80))
    source = Column(NVARCHAR(255))
    attr = Column(NVARCHAR)
    well_id = Column(Integer)

    def __repr__(self):
        return f'User {self.name}'

Base.metadata.create_all(engine)












-----------------------------

CUT

students = Table(
   'students222345', metadata, 
   Column('id', Integer, primary_key = True), 
   Column('name', String), 
   Column('lastname', String),
)

#metadata.create_all(engine)


students = Table(
   'students3', metadata, 
   Column('id', Integer, primary_key = True), 
   Column('name', String), 
   Column('lastname', String),
    Column('pk_index', Integer, primary_key = True), 
    Column('data_type', Integer),
    Column('top_depth', Float),
    Column('base_depth', Float),
    Column('top_boundary', SmallInteger),
    Column('base_boundary', SmallInteger),
    Column('symbol_id', Integer),
    Column('legend', NVARCHAR(max),
    Column('Integererpreter', NVARCHAR(length=6),
    Column('created', Float),
    Column('modified', Float),
    Column('obsno', Integer),
    Column('mindepth', Float),
    Column('maxdepth', Float),
    Column('remark', NVARCHAR(length=80),
    Column('geofeature', NVARCHAR(length=40),
    Column('dipangle', Float),
    Column('dipazimuth', Float),
    Column('age', Float),
    Column('owconf', NVARCHAR(length=2),
    Column('owqual', NVARCHAR(length=4),
    Column('owkind', NVARCHAR(length=42),
    Column('owbaseconf', NVARCHAR(length=2),
    Column('owbasequal', NVARCHAR(length=4),
    Column('owbasekind', NVARCHAR(length=42),
    Column('top_age', Float),
    Column('base_age', Float),
    Column('f_Integererpid', Integer),
    Column('creator', NVARCHAR(length=64),
    Column('modifier', NVARCHAR(length=64),
    Column('abr', NVARCHAR(length=80),
    Column('source', NVARCHAR(length=255),
    Column('attr', NVARCHAR(max),
    Column('well_id', Integer),
)
metadata.create_all(engine)


---------------------------------------------
OLD METHOD TO CREATE TABLES

sql = '''

CREATE TABLE [dbo].[DATA_OilSample_NPD](
	[pk_index] [int] IDENTITY(1,1) NOT NULL,
	[data_type] [int] NULL,
	[top_depth] [float] NULL,
	[base_depth] [float] NULL,
	[top_boundary] [smallint] NULL,
	[base_boundary] [smallint] NULL,
	[symbol_id] [int] NULL,
	[legend] [nvarchar](max) NULL,
	[interpreter] [nvarchar](6) NULL,
	[created] [float] NULL,
	[modified] [float] NULL,
	[obsno] [int] NULL,
	[mindepth] [float] NULL,
	[maxdepth] [float] NULL,
	[remark] [nvarchar](80) NULL,
	[geofeature] [nvarchar](40) NULL,
	[dipangle] [float] NULL,
	[dipazimuth] [float] NULL,
	[age] [float] NULL,
	[owconf] [nvarchar](2) NULL,
	[owqual] [nvarchar](4) NULL,
	[owkind] [nvarchar](42) NULL,
	[owbaseconf] [nvarchar](2) NULL,
	[owbasequal] [nvarchar](4) NULL,
	[owbasekind] [nvarchar](42) NULL,
	[top_age] [float] NULL,
	[base_age] [float] NULL,
	[f_interpid] [int] NULL,
	[creator] [nvarchar](64) NULL,
	[modifier] [nvarchar](64) NULL,
	[abr] [nvarchar](80) NULL,
	[source] [nvarchar](255) NULL,
	[attr] [nvarchar](max) NULL,
	[well_id] [int] NULL,
PRIMARY KEY CLUSTERED 
(
	[pk_index] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

'''

#pd.read_sql_query(sql, engine)
with engine.begin() as conn:
    conn.execute(sql)