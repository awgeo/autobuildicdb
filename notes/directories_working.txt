# IC database folder
dbdir= 'C:\ICData\Test42'

# output_data folder within IC database folder
outdir = '{}\output_data'.format(dbdir)
if not os.path.exists(outdir):
    os.mkdir(outdir)

fullname = os.path.join(outdir, outname)
print(fullname)

---

def output_to_csv(outname, df):

    filepath = '{}\{}.csv'.format(outdir, outname)
    print('Saved to:', filepath)
    
    df.to_csv(filepath, index=False, encoding='utf-8-sig')

    return pd.read_csv(filepath).head(3)

# Example: output_to_csv(outname='IC_wellbore_exploration_all', df=df_explo)




for index, row in df_core_photo.iterrows(): 

    folder = row['Wellbore'].replace('/', '_')
    #print(folder)
    file = row['Core photo URL'].split('/')[-1]
    #print(file)
    row['Legend'] = print('.\core_photo_jpegs\{}\{}'.format(folder, file))

df_core_photo




# Add a new column with the filepath, e.g. '.\3279_06_2044_2049m.jpg'
# Where . represents the current directory

#df_core_photo['Folder'] = df_core_photo['Wellbore'].str.replace('/', '_')
#df_core_photo['Folder']

# Escaped insert backslash
#df_core_photo['Legend'] = '.\\' + df_core_photo['Core photo URL'].str.split('/').str[-1]

df_core_photo['Legend'] = '.\core_photo_jpgs\\' + df_core_photo['Folder'] + '\\' + df_core_photo['Core photo URL'].str.split('/').str[-1]
df_core_photo

#core_photo_jpgs



# # Generate datatype numbers using next() function
# dtypenums = list(range(9000, 9050, 1))
# dtypenums_iter = iter(dtypenums)

# # Dictionary of IC Data Types, generate data_type numbers

# ic_data_types = {'Core Photo (NPD)': next(dtypenums_iter),
# 'Thin Section (NPD)': next(dtypenums_iter),
# 'Sample sequence number (NPD)': next(dtypenums_iter),
# 'CO2 (vol %) (NPD)': next(dtypenums_iter),
# 'Sample type (NPD)': next(dtypenums_iter),
# 'Test type (NPD)': next(dtypenums_iter),
# 'Bottle number (NPD)': next(dtypenums_iter),
# 'Fluid type (NPD)': next(dtypenums_iter),
# 'Test time (NPD)': next(dtypenums_iter),
# 'Received date (NPD)': next(dtypenums_iter),
# 'Group (NPD)': next(dtypenums_iter),
# 'Formation (NPD)': next(dtypenums_iter),
# 'Member (NPD)': next(dtypenums_iter),
# 'Test number (NPD)': next(dtypenums_iter),
# 'Choke size (mm) (NPD)': next(dtypenums_iter),
# 'Final shut-in pressure (MPa) (NPD)': next(dtypenums_iter),
# 'Final flow pressure (MPa) (NPD)': next(dtypenums_iter),
# 'Bottom hole pressure (MPa) (NPD)': next(dtypenums_iter),
# 'Oil (Sm3/day) (NPD)': next(dtypenums_iter),
# 'Gas (Sm3/day) (NPD)': next(dtypenums_iter),
# 'Oil density (g/cm3) (NPD)': next(dtypenums_iter),
# 'Gas grav. rel.air (NPD)': next(dtypenums_iter),
# 'GOR (m3/m3) (NPD)': next(dtypenums_iter),
# 'Downhole temperature (Â°C) (NPD)': next(dtypenums_iter),
# 'Casing type (NPD)': next(dtypenums_iter),
# 'Casing diam. (inch) (NPD)': next(dtypenums_iter),
# 'Hole diam. (inch) (NPD)': next(dtypenums_iter),
# 'Hole depth(m) (NPD)': next(dtypenums_iter),
# 'LOT mud eqv. (g/cm3) (NPD)': next(dtypenums_iter),
# 'Formation test type (NPD)': next(dtypenums_iter),
# 'Mud weight (g/cm3) (NPD)': next(dtypenums_iter),
# 'Visc. (mPa.s) (NPD)': next(dtypenums_iter),
# 'Yield point (Pa) (NPD)': next(dtypenums_iter),
# 'Mud type (NPD)': next(dtypenums_iter),
# 'Date measured (NPD)': next(dtypenums_iter),
# }

# ic_data_types

# What do I need to know about data type? A title, data_type, dest_table, style