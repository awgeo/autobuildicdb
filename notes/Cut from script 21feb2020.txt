CUT FROM SCRIPT


	{'well_id': , #int NOT NULL
	'data_type': , #int  NOT NULL
	'top_depth': , #float  NOT NULL
	'symbol_id': , #int  NOT NULL
	'pk_index': , #int  IDENTITY(1,1) NOT NULL
	'top_age': , #float
	'base_age': , #float
	'owconf': , #nvarchar (2)
	'owqual': , #nvarchar (4)
	'owkind': , #nvarchar (42)
	'owbaseconf': , #nvarchar (2)
	'owbasequal': , #nvarchar (4)
	'owbasekind': , #nvarchar (42)
	'f_interpid': , #int
	'creator': , #nvarchar (64)
	'modifier': , #nvarchar (64)
	'abr': , #nvarchar (80)
	'source': , #nvarchar (255)
	'attr': , #nvarchar (max)
	'top_boundary': , #smallint
	'base_depth': , #float
	'base_boundary': , #smallint
	'legend': , #nvarchar (max)
	'interpreter': , #nvarchar (6)
	'created': , #float
	'modified': , #float
	'obsno': , #int
	'mindepth': , #float
	'maxdepth': , #float
	'remark': , #nvarchar (80)
	'geofeature': , #nvarchar (40)
	'dipangle': , #float
	'dipazimuth': , #float
	'age': , #float}

pandas 1.0.1
--------------------
# List of all columns in dbo.DATA_Lithostrat (TO DO!)
# Insert new columns as necessary

# df_dbodatalithostrat['symbol_id'] = 0
# df_dbodatalithostrat['f_interpid'] = 0
# df_dbodatalithostrat['creator'] = 1
# df_dbodatalithostrat['modifier'] = 1
# df_dbodatalithostrat['source'] = 'Python script'
# df_dbodatalithostrat['attr'] = 'test' 
# # '{"ZoneColour":-1,"ZoneColourIsIpAuto":true,"EventSymbolId":0,"IsLocked":false,"OriginalZoneIndex":0}'
# df_dbodatalithostrat['top_boundary'] = 0
# df_dbodatalithostrat['base_boundary'] = 0
# df_dbodatalithostrat['created '] = now
# # df_dbodatalithostrat['modified'] = now
# df_dbodatalithostrat['obsno'] = 0
# df_dbodatalithostrat['mindepth'] = 0
# df_dbodatalithostrat['maxdepth'] = 0
# df_dbodatalithostrat['dipangle'] = 0
# df_dbodatalithostrat['dipazimuth'] = 0
# df_dbodatalithostrat['age'] = 0

# Additional columns in dbo.Lithostrat that don't need autopopulated
# top_age, base_age, owconf, owqual, owkind, owbaseconf, owbasequal, owbasekind, abr, interpreter, remark, geofeature
----------------
# TO DO: Why is 'created' column entirely NaN (count 35963 rows) after reindexing?

strat_order = ['well_id', 'data_type', 'top_depth', 'symbol_id', 'f_interpid', 'creator', 
              'modifier', 'source', 'attr', 'top_boundary', 'base_depth', 'base_boundary', 'legend', 
              'created', 'modified', 'obsno', 'mindepth', 'maxdepth', 'dipangle', 'dipazimuth', 'age']

df_dbodatalithostrat = df_dbodatalithostrat.reindex(columns=strat_order)
df_dbodatalithostrat.head(3)
------------------
# Where is "extended geological info" stored (Geologic Feature, Remark)
# Note that source column in DATA_Lithostrat is nvarchar(255)  - change seismic_line from 64 to 255?

#df_dbodatalithostrat['created'] = df_dbodatalithostrat['created'].apply(sqlalchemy.DateTime)
#df_dbodatalithostrat['modified'] = pd.to_datetime

#df_dbodatalithostrat[['created', 'modified']] = df_dbodatalithostrat[['created', 'modified']].apply(pd.to_datetime)
-----------
# well_id and data_type columns should be int, not float
df_dbodatalithostrat.well_id = df_dbodatalithostrat.well_id.astype('int64')
df_dbodatalithostrat.data_type = df_dbodatalithostrat.data_type.astype('int64')

# When trying to insert 'created' and 'modified' columns to database, get error:
# TypeError: cannot astype a datetimelike from [datetime64[ns]] to [float64]
# Why are these floats in dbo.DATA_Lithostrat but in other tables like dbo.WELLS they're nvarchar/srt?
# Try importing vs manually adding created and modified fields in IC.
# See what it does with floats!

# Useful doc: Data type mappings between Python and SQL Server
# https://docs.microsoft.com/en-us/sql/advanced-analytics/python/python-libraries-and-data-types?view=sql-server-ver15

# Need to Convert datetime64[ns] column for 'created' and 'modified' to float64
# But you can't do that! TypeError: cannot astype a datetimelike from [datetime64[ns]] to [float64]

####df_dbodatalithostrat['created'] = df_dbodatalithostrat['created'].astype('float64')
####df_dbodatalithostrat['modified'] = df_dbodatalithostrat['modified'].astype('float64')

#df_dbodatalithostrat.dtypes

# Temporarily drop 'created' and 'modified' columns
df_dbodatalithostrat.drop(['created', 'modified'], axis=1, inplace=True)
df_dbodatalithostrat.head(3)

df_dbodatalithostrat[df_dbodatalithostrat['data_type'] == 113]
-----------------------
# List of all columns in dbo.DATA_Core
# Insert new columns only as necessary

df_dbodatacore['data_type'] = 5280 # 5280 (NPD Core Intervals)
# df_dbodatacore['top_depth'] = 
# df_dbodatacore['base_depth'] = 
df_dbodatacore['top_boundary'] = 1
df_dbodatacore['base_boundary'] = 1
df_dbodatacore['symbol_id'] = 0
# df_dbodatacore['legend'] = 
# df_dbodatacore['abr'] = 
# df_dbodatacore['attr'] = '{"ZoneColour":-1df_dbodatacore["ZoneColourIsIpAuto":truedf_dbodatacore["EventSymbolId":0df_dbodatacore["IsLocked":falsedf_dbodatacore["OriginalZoneIndex":0}'
# df_dbodatacore['interpreter'] = 
df_dbodatacore['created'] = now
df_dbodatacore['creator'] = 1
# df_dbodatacore['modified'] = now
# df_dbodatacore['modifier'] = 1
df_dbodatacore['obsno'] = 0
df_dbodatacore['mindepth'] = 0
df_dbodatacore['maxdepth'] = 0
# df_dbodatacore['remark'] = 
# df_dbodatacore['geofeature'] = 
df_dbodatacore['source'] = 'Script'
df_dbodatacore['dipangle'] = 0
df_dbodatacore['dipazimuth'] = 0
df_dbodatacore['age'] = 0
# df_dbodatacore['owconf'] = 
# df_dbodatacore['owqual'] = 
# df_dbodatacore['owkind'] = 
# df_dbodatacore['owbaseconf'] = 
# df_dbodatacore['owbasequal'] = 
# df_dbodatacore['owbasekind'] = 
df_dbodatacore['top_age'] = 0
df_dbodatacore['base_age'] = 0
df_dbodatacore['f_interpid'] = 0
# df_dbodatacore['well_id'] = 

df_dbodatacore
-----------------------------------------
    # 'well_id': 0, #int NOT NULL
    # 'data_type': 0, #int  NOT NULL
    # 'top_depth': 0, #float  NOT NULL
    # 'base_depth': 0, #float
    # 'legend': '0', #nvarchar (max)
------------------------------------------------

---------------------------------------------------------------------------
core_npd_tablenum = 900
petrography_tablenum = 901
co2_content_tablenum = 902
oil_sample_tablenum = 903
lithostrat_tablenum = 904
dst_tablenum = 905
casinglot_tablenum = 906
drillingmud_tablenum = 907
-------------------------------------------------
'Bottle number (NPD)',
'Bottom hole pressure (MPa) (NPD)',
'Casing diam. (inch) (NPD)',
'Casing type (NPD)',
'Choke size (mm) (NPD)',
'CO2 (vol %) (NPD)',
'Core Photo (NPD)',
'Date measured (NPD)',
'Downhole temperature (Â°C) (NPD)',
'Final flow pressure (MPa) (NPD)',
'Final shut-in pressure (MPa) (NPD)',
'Fluid type (NPD)',
'Formation (NPD)',
'Formation test type (NPD)',
'Gas (Sm3/day) (NPD)',
'Gas grav. rel.air (NPD)',
'GOR (m3/m3) (NPD)',
'Group (NPD)',
'Hole depth(m) (NPD)',
'Hole diam. (inch) (NPD)',
'LOT mud eqv. (g/cm3) (NPD)',
'Member (NPD)',
'Mud type (NPD)',
'Mud weight (g/cm3) (NPD)',
'Oil (Sm3/day) (NPD)',
'Oil density (g/cm3) (NPD)',
'Received date (NPD)',
'Sample sequence number (NPD)',
'Sample type (NPD)',
'Test number (NPD)',
'Test time (NPD)',
'Test type (NPD)',
'Thin Section (NPD)',
'Visc. (mPa.s) (NPD)',
'Yield point (Pa) (NPD)'
------------------------
# List of all columns in dbo.DATA_Core
# Insert new columns only as necessary for Core Photos

df_dbodatacore_images['data_type'] = 3000 # 3000 (NPD Core Images)
# df_dbodatacore_images['top_depth'] = 
# df_dbodatacore_images['base_depth'] = 
df_dbodatacore_images['top_boundary'] = 1
df_dbodatacore_images['base_boundary'] = 1
df_dbodatacore_images['symbol_id'] = 0
# df_dbodatacore_images['legend'] = 
# df_dbodatacore_images['abr'] = 
# df_dbodatacore_images['attr'] = '{"ZoneColour":-1df_dbodatacore_images["ZoneColourIsIpAuto":truedf_dbodatacore_images["EventSymbolId":0df_dbodatacore_images["IsLocked":falsedf_dbodatacore_images["OriginalZoneIndex":0}'
# df_dbodatacore_images['interpreter'] = 
df_dbodatacore_images['created'] = now
df_dbodatacore_images['creator'] = 1
# df_dbodatacore_images['modified'] = now
# df_dbodatacore_images['modifier'] = 1
df_dbodatacore_images['obsno'] = 0
df_dbodatacore_images['mindepth'] = 0
df_dbodatacore_images['maxdepth'] = 0
# df_dbodatacore_images['remark'] = 
# df_dbodatacore_images['geofeature'] = 
df_dbodatacore_images['source'] = 'Script'
df_dbodatacore_images['dipangle'] = 0
df_dbodatacore_images['dipazimuth'] = 0
df_dbodatacore_images['age'] = 0
# df_dbodatacore_images['owconf'] = 
# df_dbodatacore_images['owqual'] = 
# df_dbodatacore_images['owkind'] = 
# df_dbodatacore_images['owbaseconf'] = 
# df_dbodatacore_images['owbasequal'] = 
# df_dbodatacore_images['owbasekind'] = 
df_dbodatacore_images['top_age'] = 0
df_dbodatacore_images['base_age'] = 0
df_dbodatacore_images['f_interpid'] = 0
# df_dbodatacore_images['well_id'] = 

df_dbodatacore_images
----------------------------------------------
# List of all columns in dbo.DATA_Core
# Insert new columns only as necessary for Core Photos

df_datapetrography_npdthinsection['data_type'] = 5565 # 5565 (NPD Thin Section)
# df_datapetrography_npdthinsection['top_depth'] = 
# df_datapetrography_npdthinsection['base_depth'] = 
# df_datapetrography_npdthinsection['top_boundary'] = 
# df_datapetrography_npdthinsection['base_boundary'] = 
# df_datapetrography_npdthinsection['symbol_id'] = 0
# df_datapetrography_npdthinsection['legend'] = 
# df_datapetrography_npdthinsection['abr'] = 
# df_datapetrography_npdthinsection['attr'] = '{"ZoneColour":-1df_datapetrography_npdthinsection["ZoneColourIsIpAuto":truedf_datapetrography_npdthinsection["EventSymbolId":0df_datapetrography_npdthinsection["IsLocked":falsedf_datapetrography_npdthinsection["OriginalZoneIndex":0}'
# df_datapetrography_npdthinsection['interpreter'] = 
df_datapetrography_npdthinsection['created'] = now
df_datapetrography_npdthinsection['creator'] = 1
# df_datapetrography_npdthinsection['modified'] = now
# df_datapetrography_npdthinsection['modifier'] = 1
df_datapetrography_npdthinsection['obsno'] = 0
df_datapetrography_npdthinsection['mindepth'] = 0
df_datapetrography_npdthinsection['maxdepth'] = 0
# df_datapetrography_npdthinsection['remark'] = 
# df_datapetrography_npdthinsection['geofeature'] = 
df_datapetrography_npdthinsection['source'] = 'Script'
df_datapetrography_npdthinsection['dipangle'] = 0
df_datapetrography_npdthinsection['dipazimuth'] = 0
df_datapetrography_npdthinsection['age'] = 0
# df_datapetrography_npdthinsection['owconf'] = 
# df_datapetrography_npdthinsection['owqual'] = 
# df_datapetrography_npdthinsection['owkind'] = 
# df_datapetrography_npdthinsection['owbaseconf'] = 
# df_datapetrography_npdthinsection['owbasequal'] = 
# df_datapetrography_npdthinsection['owbasekind'] = 
# df_datapetrography_npdthinsection['top_age'] = 0
# df_datapetrography_npdthinsection['base_age'] = 0
df_datapetrography_npdthinsection['f_interpid'] = 0
# df_datapetrography_npdthinsection['well_id'] = 

df_datapetrography_npdthinsection
------------------------------------------------------------------
sql = '''
SELECT COUNT(DISTINCT data_type) AS 'Data Types', COUNT(DISTINCT well_id) AS 'Wells', COUNT(legend) AS 'Records'
FROM DATA_Core WHERE data_type = 9000
'''
pd.read_sql_query(sql, engine)
-------------------------------------------------------------------

# Insert data_type column
df_dbodatacore_images['data_type'] = 9001

# Concatenate additional columns from dict tablestyle_i_defaults
df_dbodatacore_images = df_dbodatacore_images.assign(**tablestyle_i_defaults)
df_dbodatacore_images

--------------------------------------------------------------
# List of all columns in dbo.DATA_CO2
# Insert new columns only as necessary for CO2

#df_dbodataco2_co2content['data_type'] = #Leave blank for Sample data
# df_dbodataco2_co2content['top_depth'] = 
# df_dbodataco2_co2content['base_depth'] = 
df_dbodataco2_co2content['top_boundary'] = 0 # Boundary off
df_dbodataco2_co2content['base_boundary'] = 0
df_dbodataco2_co2content['symbol_id'] = 0
# df_dbodataco2_co2content['legend'] = 
# df_dbodataco2_co2content['abr'] = 
# df_dbodataco2_co2content['attr'] = '{"ZoneColour":-1df_dbodataco2_co2content["ZoneColourIsIpAuto":truedf_dbodataco2_co2content["EventSymbolId":0df_dbodataco2_co2content["IsLocked":falsedf_dbodataco2_co2content["OriginalZoneIndex":0}'
# df_dbodataco2_co2content['interpreter'] = 
df_dbodataco2_co2content['created'] = now
df_dbodataco2_co2content['creator'] = 1
# df_dbodataco2_co2content['modified'] = now
# df_dbodataco2_co2content['modifier'] = 1
df_dbodataco2_co2content['obsno'] = 0
df_dbodataco2_co2content['mindepth'] = 0
df_dbodataco2_co2content['maxdepth'] = 0
# df_dbodataco2_co2content['remark'] = 
# df_dbodataco2_co2content['geofeature'] = 
df_dbodataco2_co2content['source'] = 'Script'
df_dbodataco2_co2content['dipangle'] = 0
df_dbodataco2_co2content['dipazimuth'] = 0
df_dbodataco2_co2content['age'] = 0
# df_dbodataco2_co2content['owconf'] = 
# df_dbodataco2_co2content['owqual'] = 
# df_dbodataco2_co2content['owkind'] = 
# df_dbodataco2_co2content['owbaseconf'] = 
# df_dbodataco2_co2content['owbasequal'] = 
# df_dbodataco2_co2content['owbasekind'] = 
df_dbodataco2_co2content['top_age'] = 0
df_dbodataco2_co2content['base_age'] = 0
df_dbodataco2_co2content['f_interpid'] = 0
# df_dbodataco2_co2content['well_id'] = 

df_dbodataco2_co2content
-----------------------------------------------------------------
# List of all columns in dbo.DATA_OilSample
# Insert new columns only as necessary for Core Photos

df_dbodataoilsample['data_type'] = 3000 # 3000 (NPD Core Images)
# df_dbodataoilsample['top_depth'] = 
# df_dbodataoilsample['base_depth'] = 
df_dbodataoilsample['top_boundary'] = 1
df_dbodataoilsample['base_boundary'] = 1
df_dbodataoilsample['symbol_id'] = 0
# df_dbodataoilsample['legend'] = 
# df_dbodataoilsample['abr'] = 
# df_dbodataoilsample['attr'] = '{"ZoneColour":-1df_dbodataoilsample["ZoneColourIsIpAuto":truedf_dbodataoilsample["EventSymbolId":0df_dbodataoilsample["IsLocked":falsedf_dbodataoilsample["OriginalZoneIndex":0}'
# df_dbodataoilsample['interpreter'] = 
df_dbodataoilsample['created'] = now
df_dbodataoilsample['creator'] = 1
# df_dbodataoilsample['modified'] = now
# df_dbodataoilsample['modifier'] = 1
df_dbodataoilsample['obsno'] = 0
df_dbodataoilsample['mindepth'] = 0
df_dbodataoilsample['maxdepth'] = 0
# df_dbodataoilsample['remark'] = 
# df_dbodataoilsample['geofeature'] = 
df_dbodataoilsample['source'] = 'Script'
df_dbodataoilsample['dipangle'] = 0
df_dbodataoilsample['dipazimuth'] = 0
df_dbodataoilsample['age'] = 0
# df_dbodataoilsample['owconf'] = 
# df_dbodataoilsample['owqual'] = 
# df_dbodataoilsample['owkind'] = 
# df_dbodataoilsample['owbaseconf'] = 
# df_dbodataoilsample['owbasequal'] = 
# df_dbodataoilsample['owbasekind'] = 
df_dbodataoilsample['top_age'] = 0
df_dbodataoilsample['base_age'] = 0
df_dbodataoilsample['f_interpid'] = 0
# df_dbodataoilsample['well_id'] = 

df_dbodataoilsample
-----------------------------------------------------------------
f = open(r"C:\ICData\Test38\Support\text.txt","a")

# f.write('Testing')
        
for grid_system in [str(x) for x in list(range(31, 38))]:
        num = '23031'
        f.write('# ED50 / UTM zone 31N\n<{}> +proj=utm +zone={} +ellps=intl +towgs84=-87,-98,-121,0,0,0,0 +units=m +no_defs <>\n'.format(num, grid_system))

f.close()


