Location = Barents Sea
165
Location = North Sea
1386
Location = Norwegian Sea
382
Country = NORWAY
1933
ALL ADDS UP!

Why are 1768 wells automatically added to PROJECTWELLS but for project_id 2 and 3 only?
Showing full 2000 results.
---> 1933-165 = 1768
Why are Barent's Sea wells not being auto-populated in PROJECTWELLS?
Seems OK now, but projects seem randomly assigned as switched between dynamic and static. How is it meant to work>

NPD lithostrat
1771 wells have gp
1735 have fm
12 have member
check!

NPD Core Interval
wells in IC 1159
Check!

NPD Core Photo
559 wells in IC
Not including those invalid.
Check!

NPD Thin Section
181 wells in IC
Check!


IC Data Tables and Types to create - 

co2 (interval samples) <--- create new table
Sample sequence number, int-val
CO2 [vol %], int-val
Sample type, int-comment

# (5650, 544, 'Sample sequence number', 'Sample sequence number', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 3, 0, 0, 0), 
# (5655, 544, 'CO2 [vol %]', 'CO2 [vol %]', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 2, 0, 0, 0),
# (5660, 544, 'Sample type', 'Sample type', 0, 1, 0, 1, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 45, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'C', 100, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 1, 0, 0, 0),


oil sample (interval samples) <--- create new table
Test type
Bottle number
Fluid type
Test time
Received date

dst (interval sample) <--- use existing table "Drill Stem Tests - DST" but change to collection
Test number
Choke size [mm]
Final shut-in pressure [MPa]
Final flow pressure [MPa]
Bottom hole pressure [MPa]
Oil [Sm3/day]
Gas [Sm3/day]
Oil density [g/cm3]
Gas grav. rel.air
GOR [m3/m3]
Downhole temperature [Â°C]

casing/lot (point, sample) <--- use existing table "Casing" but change to collection
Casing type
Casing diam. [inch]
Hole diam. [inch]
Hole depth[m]
LOT mud eqv. [g/cm3]
Formation test type

drilling mud (point, sample) <--- create new table
Mud weight [g/cm3]
Visc. [mPa.s]
Yield point [Pa]
Mud type
Date measured



datacore = Table('DATA_Core', metadata, autoload=True, autoload_with=engine)
datapetrography = Table('DATA_Petrography', metadata, autoload=True, autoload_with=engine) = Table('', metadata, autoload=True, autoload_with=engine)
dataco2 = Table('DATA_CO2', metadata, autoload=True, autoload_with=engine)
dataoilsample = Table('DATA_OilSample', metadata, autoload=True, autoload_with=engine)
datadst = Table('', metadata, autoload=True, autoload_with=engine)
datacasinglot = Table('', metadata, autoload=True, autoload_with=engine)
datadrillingmud = Table('DATA_DrillingMud', metadata, autoload=True, autoload_with=engine)
# = Table('', metadata, autoload=True, autoload_with=engine)




INSERT INTO dbo.INTERVALCOLUMNS (data_type, dest_table, description, title, graphic, zonal, boundaries, legend, dic_driven, col_width, back_colour, brush_style, hatch_style, int_colour, row_height, table_header, horiz_justify, vert_justify, orientation, fontname, fontsize, fontweight, fontitalic, fontunderline, fontcolour, plotwith, style, maximum, minimum, units, horiz_grid, chartstyle, plotsymbol, labelpoints, mergeevents, eventalign, sbugs_igdtype, sbugs_igdplotpos, allowoverlap, alttable, altfield, plotassequence, owinterp, ordering, wellcore, surface, f_order, isdepthage, f_style, f_coreshiftid)
VALUES 
(5650, 544, 'Sample sequence number', 'Sample sequence number', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 3, 0, 0, 0), 
(5655, 544, 'CO2 [vol %]', 'CO2 [vol %]', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 2, 0, 0, 0),
(5660, 544, 'Sample type', 'Sample type', 0, 1, 0, 1, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 45, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'C', 100, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 1, 0, 0, 0),



INSERT INTO dbo.INTERVALCOLUMNS (data_type, dest_table, description, title, graphic, zonal, boundaries, legend, dic_driven, col_width, back_colour, brush_style, hatch_style, int_colour, row_height, table_header, horiz_justify, vert_justify, orientation, fontname, fontsize, fontweight, fontitalic, fontunderline, fontcolour, plotwith, style, maximum, minimum, units, horiz_grid, chartstyle, plotsymbol, labelpoints, mergeevents, eventalign, sbugs_igdtype, sbugs_igdplotpos, allowoverlap, alttable, altfield, plotassequence, owinterp, ordering, wellcore, surface, f_order, isdepthage, f_style, f_coreshiftid)
VALUES 
(5680, 545, 'Test type', 'Test type', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 1, 0, 0, 0), 
(5685, 545, 'Bottle number', 'Bottle number', 0, 1, 0, 0, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 15, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'H', -2, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 2, 0, 0, 0),
(5690, 545, 'Fluid type', 'Fluid type', 0, 1, 0, 1, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 45, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'C', 100, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 3, 0, 0, 0),
(5695, 545, 'Test time', 'Test time', 0, 1, 0, 1, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 45, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'C', 100, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 4, 0, 0, 0),
(5700, 545, 'Received date', 'Received date', 0, 1, 0, 1, 0, 15, '1;12648447;255', 0, 0, '8;12648447;8454143', 45, 'Legend', 1, 1, 0, 'Arial', 8, 0, 0, 0, 0, 0, 'C', 100, 0, '_', 0, 0, 0, 0, 0, 0, 0, 0, 0, 'NULL', 'NULL', 0, 'NULL', 0, 0, 0, 5, 0, 0, 0);





# data_type': #int
# dest_table': #int
# description': #nvarchar(80)
# title': #nvarchar(80)
# graphic': #bit
# zonal': #bit
# boundaries': #bit
# legend': #bit
# dic_driven': #bit
# col_width': #real
# back_colour': #nvarchar(50)
# brush_style': #smallint
# hatch_style': #smallint
# int_colour': #nvarchar(50)
# row_height': #smallint
# table_header': #nvarchar(50)
# horiz_justify': #int
# vert_justify': #smallint
# orientation': #smallint
# fontname': #nvarchar(50)
# fontsize': #smallint
# fontweight': #smallint
# fontitalic': #smallint
# fontunderline': #smallint
# fontcolour': #int
# plotwith': #nvarchar(20)
# style': #nvarchar(50)
# maximum': #real
# minimum': #real
# units': #nvarchar(10)
# horiz_grid': #smallint
# chartstyle': #smallint
# plotsymbol': #int
# labelpoints': #smallint
# mergeevents': #smallint
# eventalign': #smallint
# sbugs_igdtype': #int
# sbugs_igdplotpos': #int
# allowoverlap': #smallint
# alttable': #nvarchar(30)
# altfield': #nvarchar(30)
# plotassequence': #smallint
# owinterp': #nvarchar(30)
# ordering': #smallint
# wellcore': #smallint
# surface': #smallint
# f_order': #smallint
# isdepthage': #smallint
# f_style': #int
# f_coreshiftid': #int



pk_index	tabletype	tablename	tabledescription	hascores	fileprefix	interp	pseudonames	samplebased	f_tableid
1	I	DATA_Chronostrat	Chronostratigraphy	0	I	2		0	5


INSERT INTO dbo.tablenames 
(tabletype, tablename, tabledescription, hascores, fileprefix, interp, samplebased, f_tableid)
VALUES 
('I', 'DATA_Core_NPD', 'Core (NPD)', 'False', 'A', '2', '0', '544'),
('I', 'DATA_Petrography_NPD', 'Petrography (NPD)', 'False', 'A', '2', '1', '544'),
('I', 'DATA_CO2_NPD', 'CO2 Content (NPD)', 'False', 'A', '2', '1', '544'),
('I', 'DATA_OilSample_NPD', 'Oil Sample (NPD)', 'False', 'A', '2', '1', '545'),
('I', 'DATA_Lithostrat_NPD', 'Lithostratigraphy (NPD)', 'False', 'A', '2', '0', '544'),
('I', 'DATA_Drill Stem Test_NPD', 'Drill Stem Test (NPD)', 'False', 'A', '2', '1', '544'),
('I', 'DATA_Casing and LOT_NPD', 'Casing and LOT (NPD)', 'False', 'A', '2', '1', '544'),
('I', 'DATA_DrillingMud_NPD', 'Drilling Mud (NPD)', 'False', 'A', '2', '1', '546');


('I', 'DATA_Core_NPD', 'Core (NPD)', 'False', 'A', '2', '0', '900'),
('I', 'DATA_Petrography_NPD', 'Petrography (NPD)', 'False', 'A', '2', '1', '901'),
('I', 'DATA_CO2_NPD', 'CO2 Content (NPD)', 'False', 'A', '2', '1', '902'),
('I', 'DATA_OilSample_NPD', 'Oil Sample (NPD)', 'False', 'A', '2', '1', '903'),
('I', 'DATA_Lithostrat_NPD', 'Lithostratigraphy (NPD)', 'False', 'A', '2', '0', '904'),
('I', 'DATA_Drill Stem Test_NPD', 'Drill Stem Test (NPD)', 'False', 'A', '2', '1', '905'),
('I', 'DATA_Casing and LOT_NPD', 'Casing and LOT (NPD)', 'False', 'A', '2', '1', '906'),
('I', 'DATA_DrillingMud_NPD', 'Drilling Mud (NPD)', 'False', 'A', '2', '1', '907');


# Edit descriptions and titles in dbo.INTERVALCOLUMNS

# First use UPDATE statements to rename some existing IC Data Types (Gp, Fm, Mbr, Core Interval, Core Photo, Thin Section)

sql = '''

UPDATE dbo.INTERVALCOLUMNS SET description = 'Group NPD', title = 'Group (NPD)', boundaries = 'False' WHERE data_type = 110;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Formation NPD', title = 'Formation (NPD)', boundaries = 'False' WHERE data_type = 112;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Member NPD', title = 'Member (NPD)', boundaries = 'False' WHERE data_type = 113;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Core Interval NPD', title = 'Core Interval (NPD)' WHERE data_type = 5280;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Core Photo NPD', title = 'Core Photo (NPD)' WHERE data_type = 3000;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Thin Section NPD', title = 'Thin Section (NPD)', legend='True', style = 'I', f_style = 0 WHERE data_type = 5565;

'''

#pd.read_sql_query(sql, engine)
with engine.begin() as conn:
    conn.execute(sql)



# Edit descriptions and titles in dbo.INTERVALCOLUMNS

# First use UPDATE statements to rename some existing IC Data Types (Gp, Fm, Mbr, Core Interval, Core Photo, Thin Section)

sql = '''

UPDATE dbo.INTERVALCOLUMNS SET description = 'Group NPD', title = 'Group (NPD)', boundaries = 'False' WHERE data_type = 110;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Formation NPD', title = 'Formation (NPD)', boundaries = 'False' WHERE data_type = 112;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Member NPD', title = 'Member (NPD)', boundaries = 'False' WHERE data_type = 113;

UPDATE dbo.INTERVALCOLUMNS SET description = 'Core Interval NPD', title = 'Core Interval (NPD)' WHERE data_type = 5280;
UPDATE dbo.INTERVALCOLUMNS SET description = 'Core Photo NPD', title = 'Core Photo (NPD)' WHERE data_type = 3000;

UPDATE dbo.INTERVALCOLUMNS SET description = 'Thin Section NPD', title = 'Thin Section (NPD)', legend='True', style = 'I', f_style = 0 WHERE data_type = 5565;

'''

#pd.read_sql_query(sql, engine)
with engine.begin() as conn:
    conn.execute(sql)



------------------------------------------------------------------------------------------

# Now create well queries to use with dynamic projects

wellqueries_data = {'invertresults' : '0',
                    'category' : ['ProjectFolder(1)', 
                                  'ProjectFolder(2)', 
                                  'ProjectFolder(3)', 
                                  'ProjectFolder(4)'], 
                    'query_id' : ['1', 
                                  '2', 
                                  '3', 
                                  '4'], 
                    'project_id' : '-1',
                    'title' : ['Country = NORWAY', 
                               'Location = North Sea', 
                               'Location = Norwegian Sea', 
                               'Location = Barents Sea'], 
                    'nentries' : '1',
                    'pencolour' : '0',
                    'enttype' : '4',
                    'entdatatype' : '0',
                    'entfunction' : '=',
                    'entvalue' : ['NORWAY', 
                                  'NORTH SEA', 
                                  'NORWEGIAN SEA', 
                                  'BARENTS SEA'], 
                    'entinfokey' : ['Country', 
                                    'Location', 
                                    'Location', 
                                    'Location'], 
                    'highlightstyle' : '1',
                    'highlightsymbol' : '4198'}

# Only pk_index is not null

# Create temp index, not sent to db
df_wellqueries = pd.DataFrame(wellqueries_data, index = ['wellquery_1', 
                                                         'wellquery_2', 
                                                         'wellquery_3', 
                                                         'wellquery_4'])
df_wellqueries.head()


# Create well queries for data types:
'Casing and LOT (NPD)'
'CO2 Content (NPD)'
'Core (NPD)'
'Drill Stem Test (NPD)'
'Drilling Mud (NPD)'
'Lithostratigraphy (NPD)'
'Oil Sample (NPD)'
'Petrography (NPD)'

-------------------------------------------------------------